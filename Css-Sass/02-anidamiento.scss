$color-01: #ff0000;
$color-02: #00ff00;
$color-03: #0000ff;
$size-01: 1rem;
* {
  padding: 0;
  box-sizing: border-box;
  margin: 0;
  border: $color-01 solid 1px;
}
html {
  font-size: 62.5%;
  font-size: $size-01;
}

/* TIP: Anidamiento
* Permite crear declaracione dentro de otras declaraciones que crean selectores
*/
/* BUG: NO se deberia crear malas practicas a partir de anidameinto*/
ul {
  margin: 0;
  li {
    margin: 0;
    div {
      display: flex;
    }
  }
}

/* TIP: el anidamiento con mediaquerys compila por fuera*/
ul {
  margin: 0;
  display: block;
  @media screen and (min-width: 640px) {
    display: flex;
  }
}

/* TIP: :Hover ::before */
.menu {
  margin: 0;
  &:hover {
    color: $color-01;
  }
  &::before {
    color: $color-03;
  }
}

/* TIP: creacion de clases por anidamiento*/
.menu {
  display: block;
  &-item {
    color: $color-02;
  }
}

/* TIP: TIpos de Datos SASS */
/* TIP: Type strings */
$file1: "file.jpg";
$file2: quote("file.jpg");
$file3: unquote("file.jpg");
html {
  background: type-of($file1);
  background: url($file1);
  background: url($file2);
  background: url($file3);
}

/* TIP: Type Numeros*/
$num1: 5px;
html {
  background: type-of($num1);
  margin: $num1 + 10;
}

/* TIP: Type Colores*/
$col1: #f562ab;
$col2: darken(#f562ab, 40);
html {
  background: type-of($col1);
  color: $col1;
  color: $col2;
}

/* TIP: Type boolean*/
$bool: true;
html {
  background: type-of($bool);
  color: $bool;
}

/* TIP: Type List*/
$lista1: 1px solid red;
$lista2: 1px, solid, red;
html {
  background: type-of($lista1);
  background: type-of($lista2);
  border: $lista1;
  border: $lista2;
}

/* TIP: TYPE map (similares a objetos pero para CSS) */
$mapa: (
  color: red,
  font: arial,
  size: 20px,
);
html {
  background: type-of($mapa);
  color: map-get($mapa, color);
}
